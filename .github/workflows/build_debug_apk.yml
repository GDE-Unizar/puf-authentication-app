# This action builds the debug version,
# Adapted from https://github.com/amirisback/automated-build-android-app-with-github-action
name: Build debug apk

on:
  # Triggers the workflow on push events for the master branch
  # push:
  #   branches:
  #     - master

  # Run this workflow manually from the Actions tab
  workflow_dispatch:

# parameters
env:
  VARIANT: debug
  TAG: debug

permissions:
  contents: write # need to update tag and release

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Get the repository files
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set gradlew as executable
        # for some reason the gradle-build-action doesn't do this automatically
        run: chmod +x ./gradlew

      - name: Build & assemble with gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: >
            build
            assemble${{ env.VARIANT }}

      - name: Update ${{ env.TAG }} tag to current commit
        # equivalent to EndBug/latest-tag@latest but simpler
        run: |
          git tag --force ${{ env.TAG }}
          git push --force origin tag ${{ env.TAG }}

      - name: Upload ${{ env.ZIP }} to ${{ env.TAG }} release
        # equivalent to softprops/action-gh-release@v1 but using official cli
        run: |
          gh release upload ${{ env.TAG }} app/build/outputs/apk/${{ env.VARIANT }}/app-${{ env.VARIANT }}.apk --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
